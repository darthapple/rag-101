[tool.poetry]
name = "rag-worker"
version = "0.1.0"
description = "RAG-101 Worker service for document processing, embeddings, and Q&A generation"
authors = ["RAG-101 Team"]
readme = "README.md"
packages = [
    {include = "handlers"},
    {include = "worker"}
]

[tool.poetry.dependencies]
python = "^3.11"
# Core async and messaging
nats-py = "^2.7.0"
asyncio = "^3.4.3"
websockets = "^12.0"

# Vector database
pymilvus = "^2.3.4"

# LangChain ecosystem
langchain = "^0.3.0"
langchain-community = "^0.3.0"
langchain-google-genai = "^2.0.0"
langchain-text-splitters = "^0.3.0"
langchain-core = "^0.3.0"

# Google AI
google-generativeai = "^0.8.0"

# Document processing
pypdf = "^3.17.0"
pypdf2 = "^3.0.1"
python-docx = "^1.1.0"
python-magic = "^0.4.27"
aiohttp = "^3.9.1"
aiofiles = "^23.2.0"
requests = "^2.31.0"

# Data processing
pydantic = "^2.5.0"
python-multipart = "^0.0.6"

# Utilities
python-dotenv = "^1.0.0"
structlog = "^23.2.0"
tenacity = "^8.2.3"
psutil = "^5.9.6"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
black = "^23.11.0"
ruff = "^0.1.6"
mypy = "^1.7.1"
pre-commit = "^3.6.0"

[tool.poetry.scripts]
worker = "worker.main:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_untyped_defs = true
follow_imports = "silent"
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_unimported = true
no_implicit_optional = true
warn_return_any = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = [
    "nats.*",
    "pymilvus.*",
    "google.generativeai.*",
    "langchain.*",
    "magic.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "-ra",
    "--cov=handlers",
    "--cov=worker",
    "--cov-branch",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow tests",
    "external: Tests that require external services",
]