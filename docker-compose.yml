services:
  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.18
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://etcd:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2024-12-18T13-15-44Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9001:9001"
      - "9000:9000"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  standalone:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.6.0
    command: ["milvus", "run", "standalone"]
    security_opt:
    - seccomp:unconfined
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
      MQ_TYPE: woodpecker
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - "etcd"
      - "minio"

  nats:
    container_name: milvus-nats
    image: nats
    ports:
      - "4222:4222"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/nats:/data
    command: -js -sd /data

  api:
    build:
      context: .
      dockerfile: services/api/Dockerfile
    container_name: rag-101-api
    ports:
      - "8000:8000"
    environment:
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - NATS_URL=nats://nats:4222
      - MILVUS_HOST=standalone
      - MILVUS_PORT=19530
    depends_on:
      standalone:
        condition: service_healthy
      nats:
        condition: service_started
      worker:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/api-logs:/app/logs

  worker:
    build:
      context: .
      dockerfile: services/worker/Dockerfile
    container_name: rag-101-worker
    environment:
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - NATS_URL=nats://nats:4222
      - MILVUS_HOST=standalone
      - MILVUS_PORT=19530
    depends_on:
      standalone:
        condition: service_healthy
      nats:
        condition: service_started
    healthcheck:
      test: ["CMD", "python", "-c", "import psutil; import sys; sys.exit(0 if any('main.py' in ' '.join(p.cmdline()) for p in psutil.process_iter()) else 1)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/worker-logs:/app/logs
    restart: unless-stopped

networks:
  default:
    name: milvus